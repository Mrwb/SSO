<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!-- 扫描 controller -->
	<context:component-scan base-package="com.noitom" />

	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:properties/config.properties</value>
			</list>
		</property>
	</bean>

	<!-- 定义视图解析器 -->
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/views/" />
		<property name="configLocation" value="classpath:properties/velocity.properties" />
	</bean>
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
		<property name="suffix" value=".vm" />
		<property name="cache" value="false" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="dateToolAttribute" value="date" /><!--日期函数名称 -->
		<property name="numberToolAttribute" value="number" /><!--数字函数名称 -->
		<property name="layoutUrl" value="layout/default.vm" />
		<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" />
	</bean>

	<!-- 重定向视图控制器标签 -->
	<mvc:redirect-view-controller path="/redirect"
		redirect-url="/status" context-relative="true" status-code="301"
		keep-query-params="true" />

	<mvc:redirect-view-controller path="/"
		redirect-url="/index.html" context-relative="true" status-code="301"
		keep-query-params="true" />

	<mvc:default-servlet-handler />

	<!-- 状态控制器标签 -->
	<mvc:status-controller path="/status"
		status-code="200" />

	<!-- 带状态的视图控制器标签 -->
	<mvc:view-controller path="/error/**" status-code="200" />

	<!-- 网站图标，注意 ！favicon.ico 放在 webapp 目录 -->
	<mvc:resources mapping="/favicon.ico" location="/favicon.ico" />

	<!-- 配置静态资源，直接映射到对应的文件夹，DispatcherServlet 不处理 -->
	<mvc:resources mapping="/static/**" location="/WEB-INF/static/" />

	<mvc:annotation-driven>
	</mvc:annotation-driven>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<property name="filters" value="stat" />
		<!-- 慢sql颜色高亮 -->
		<property name="connectionProperties" value="druid.stat.slowSqlMillis=2000" />
	</bean>

	<!-- <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter"> 
		<property name="slowSqlMillis" value="3" /> <property name="logSlowSql" value="true" 
		/> </bean> -->

	<!--根据dataSource创建一个SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="mapperLocations" value="/WEB-INF/classes/sqlMap/*.xml"></property>
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--根据sqlSessionFactory创建一个sqlSession模版类 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0">
			<ref bean="sqlSessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="dao" class="com.noitom.dao.MybatisDaoImpl">
		<constructor-arg index="0">
			<ref bean="sqlSessionFactory" />
		</constructor-arg>
	</bean>
</beans>
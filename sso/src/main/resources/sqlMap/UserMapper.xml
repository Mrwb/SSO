<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="UserMapper">
	<!-- 映射结果集 -->
	<resultMap id="userResultMap" type="com.noitom.model.User">
		<id property="id" column="id" jdbcType="BIGINT"/>
    	<result property="accountName" column="account_name" jdbcType="VARCHAR"/>
    	<result property="email" column="email" jdbcType="VARCHAR"/>
    	<result property="password" column="password" jdbcType="VARCHAR"/>
    	<result property="oldPassword" column="password" jdbcType="VARCHAR"/>
    	<result property="enable" column="enable" jdbcType="BIT"/>
    	<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="userColumnList">
	    <![CDATA[
			id,account_name,enable,create_time
	    ]]>
	</sql>
	
	<!-- 根据用户id和旧密码查询用户 -->
	<select id="selectOneByOldPassword" resultMap="userResultMap" parameterType="com.noitom.model.User">
		SELECT <include refid="userColumnList" />
	    <![CDATA[
	    FROM user 
	    ]]>
        <where>	  
        	1=1 
					AND id = #{id,jdbcType=BIGINT}
					AND password = AES_ENCRYPT(#{oldPassword,jdbcType=VARCHAR},'Rm6XbB81lGwmXcGqs3')
					AND enable = 1
		</where>
		LIMIT 1
	</select>
	
	<!-- 根据用户id查询用户 -->
	<select id="selectOneById" resultMap="userResultMap" parameterType="com.noitom.model.User">
		SELECT <include refid="userColumnList" />
	    <![CDATA[
	    FROM user 
	    ]]>
        <where>	  
        	1=1 
					AND id = #{id,jdbcType=BIGINT}
					AND enable = 1
		</where>
		LIMIT 1
	</select>
		<!-- 根据条件查询 -->
	<select id="selectOneByCondition" resultMap="userResultMap" parameterType="com.noitom.model.User">
		SELECT <include refid="userColumnList" />
	    <![CDATA[
	    FROM user 
	    ]]>
        <where>	  
        	1=1 
		       <if test="accountName != null">
					AND account_name = #{accountName,jdbcType=VARCHAR} or email = #{accountName,jdbcType=VARCHAR}
			   </if>
		       <if test="password != null">
					AND password = AES_ENCRYPT(#{password,jdbcType=VARCHAR},'Rm6XbB81lGwmXcGqs3')
			   </if>
					AND enable = 1
		</where>
		LIMIT 1
	</select>
	<!-- 根据参数对象中有值的进行插入-->
	<insert id="insert" parameterType="com.noitom.model.User" >
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides="," >
	     	<if test="id != null" >
		    id,
		  	</if>
	     	<if test="accountName != null" >
		    account_name,
		  	</if>
		  	<if test="email != null" >
		    email,
		  	</if>
	     	<if test="password != null" >
		    password,
		  	</if>
	     	<if test="enable != null" >
		    enable,
		  	</if>
	     	<if test="createTime != null" >
		    create_time,
		  	</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
	     	<if test="id != null" >
		    #{id,jdbcType=BIGINT},
		  	</if>
	     	<if test="accountName != null" >
		    #{accountName,jdbcType=VARCHAR},
		  	</if>
		  	<if test="email != null" >
		    #{email,jdbcType=VARCHAR},
		  	</if>
	     	<if test="password != null" >
		    AES_ENCRYPT(#{password,jdbcType=VARCHAR},'Rm6XbB81lGwmXcGqs3'),
		  	</if>
	     	<if test="enable != null" >
		    1,
		  	</if>
	     	<if test="createTime != null" >
		    #{createTime,jdbcType=TIMESTAMP},
		  	</if>
		</trim>
	</insert>
	
	
	<!-- 根据ID进行更新密码 -->
	<update id="updatePasswordById"  parameterType="com.noitom.model.User">
		update user
		<set>
			<if test="password != null" >
			 password = AES_ENCRYPT(#{password,jdbcType=VARCHAR},'Rm6XbB81lGwmXcGqs3'),
			</if>
		</set>
		where
			id = #{id,jdbcType=BIGINT}
	</update>
	
		<!-- 根据ID进行更新状态 -->
	<update id="updateStateById"  parameterType="com.noitom.model.User">
		update user
		<set>
			<if test="enable != null" >
			 enable = #{enable,jdbcType=BIT},
			</if>
		</set>
		where
			id = #{id,jdbcType=BIGINT}
	</update>
		<!-- 根据ID进行更新用户信息 -->
	<update id="updateUserById"  parameterType="com.noitom.model.User">
		update user
		<set>
			<if test="accountName != null" >
			 account_name = #{accountName,jdbcType=VARCHAR},
			</if>
			<if test="email != null" >
			 email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="enable != null" >
			 enable = #{enable,jdbcType=BIT},
			</if>
		</set>
		where
			id = #{id,jdbcType=BIGINT}
	</update>
</mapper>



